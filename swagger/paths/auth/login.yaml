tags: 
  - Auth
summary: Login an user
operationId: loginUser
description: Login an user
security: []
requestBody:
  required: true
  content: 
    application/json:
      schema:
        type: object
        required:
          - email
          - password
        properties:
          email:
            type: string
            example: 'johndoe@example.com'
          password:
            type: string
            example: 'password123'
responses:
  '200':
    description: User logged in successfully
    content:
      application/json:
        schema:
          type: object
          required: 
            - status
            - message
            - data
          properties:
            status:
              type: integer
              example: 200
            message:
              type: string
              example: 'Successfully logged in an user!'
            data: 
              type: object
              properties:
                accessToken:
                  type: string
                  example: 'randomToken123'
    headers:
      Set-Cookie:
        schema: 
          type: string
          example: 'refreshToken=randomToken123; HttpOnly; Expires=Wed, 01 Jan 2025 00:00:00 GMT; sessionId=randomSessionId123; HttpOnly; Expires=Wed, 01 Jan 2025 00:00:00 GMT'
  '400':
    $ref: '../../components/responses/400.yaml'
  '401':
    description: Unauthorized error
    content: 
      application/json:
        schema:
          type: object
          required:
            - status
            - message
            - data
          properties:
            status:
              type: integer
              example: 401
            message:
              type: string
              example: UnauthorizedError
            data: 
              type: object
              required:
                - message
              properties:
                message:
                  type: string
                  example: 'Email or password is wrong'
  '500':
    $ref: '../../components/responses/500.yaml'
